name: Build & Push TM-DB-Testing, and Lint/Test
on:
  pull_request:
    paths:
      - "contrib/*"
      - "tools/*"
      - "go.mod"
  push:
    branches:
      - main
    paths:
      - "contrib/*"
      - "tools/*"
      - "go.mod"

env:
  CACHE_DIR: /tmp/line/tm-db-testing

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      CACHE_DIR: ${{ env.CACHE_DIR }}
      CACHE_FILE: ${{ steps.prep.outputs.CACHE_FILE }}
      TAG: ${{ steps.prep.outputs.tag }}
    steps:
      - uses: actions/checkout@v3

      - name: Prepare
        id: prep
        run: |
          HASH_GHE=${{ github.sha }}
          VARIANT=$(TZ=UTC-9 date '+%Y%m')${HASH_GHE:0:7}
          NAME_TAR="${VARIANT}.tar"
          CACHE_FILE=${{ env.CACHE_DIR }}"/${NAME_TAR}"
          echo "::set-output name=CACHE_FILE::${CACHE_FILE}"

          DOCKER_IMAGE=line/tm-db-testing
          VERSION=latest
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=latest
            fi
          fi
          TAG="${DOCKER_IMAGE}:${VERSION}"
          echo ::set-output name=tag::${TAG}

      - name: Cache Docker Image for Lint/Test
        id: cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ steps.prep.outputs.CACHE_FILE }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Publish to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./tools/Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.prep.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          load: true

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Save Docker Image for Lint/Test
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          rm -rf ${{ env.CACHE_DIR }}
          mkdir -p ${{ env.CACHE_DIR }}
          docker save -o ${{ steps.prep.outputs.CACHE_FILE }} ${{ steps.prep.outputs.TAG }}

  call-lint:
    needs: build
    uses: ./.github/workflows/lint.yml
    with:
      CACHE_DIR: ${{ needs.build.outputs.CACHE_DIR }}
      CACHE_FILE: ${{ needs.build.outputs.CACHE_FILE }}
      TAG: ${{ needs.build.outputs.TAG }}

  call-test:
    needs: build
    uses: ./.github/workflows/test.yml
    with:
      CACHE_DIR: ${{ needs.build.outputs.CACHE_DIR }}
      CACHE_FILE: ${{ needs.build.outputs.CACHE_FILE }}
      TAG: ${{ needs.build.outputs.TAG }}
